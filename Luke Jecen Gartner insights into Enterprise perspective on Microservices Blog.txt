	I always have heard the word Microservices tossed around whether it be during my internship working at
Oracle Cerner or by various of my Professors here at Temple University.  I never fully grasped the meaning 
of microservices and what was so special about them. The Gartner paper on Microservices really gave me a 
much better understanding of how the concept and ideologies behind microservices has really changed 
the whole outlook of software development. I never realized just how much of an adjustment it would be to 
convert from using a monolithic approach to a microservice approach which is much more scalable and agile. A
quote that really stuck out to me from the text was that while all microservices are software components, 
not all components are microservices.
	
	I found the idea of Miniservices which I had never heard of before reading this article a very vital way for
companies to transition from their old monolithic approach to the new world of Microservices. I felt as 
though when reading about Miniservices in this article they give team members the chance to experience and adapt 
to some of the principles of microservices such as being a independently deployable and scalable application 
component without jumping straight in to a microservice world. It seems as though jumping straight from a 
monolithic approach to a full microservice approach will only cause turmoil and problems which can lead to 
issues that cost companies time and money. Miniservices will help to improve your applications agility and 
scalability  while helping to avoid some of the troublesome features of a microservice architecture.
	
	Microservices seem to be the way to go if you are a company that envisions yourself in the future needing 
to be very flexible and scalable. I think the ideology that comes along with microservices that allows development 
teams to build, test, and deploy individual software components without needing to wait on other components is 
huge advantage. This allows for a company to upgrade their services much more rapidly and allows teams to work
asynchronously without having to rely on each other all the time to get their work done before moving forward. 
All in all what I feel I gained from the Gartner paper on Microservices is that they can be advantageous for 
companies that need to develop flexible and scalable software for their customers or clients. Before you go head
first into a Microservice architecture you must understand the risks that come along with it and really do your
research into whether it is a good fit for the work you will be doing. It may be more beneficial to use 
Macroservrices or Miniservices to avoid some of great risk that come along with Microservices such as poor
performing applications when not applied correctly.

